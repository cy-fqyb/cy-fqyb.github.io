<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第二篇文章</title>
      <link href="/2023/01/16/two/"/>
      <url>/2023/01/16/two/</url>
      
        <content type="html"><![CDATA[<div align=center class="aspect-ratio">    <iframe src="//player.bilibili.com/player.html?aid=547298138&bvid=BV13q4y1H7ia&cid=386702201&page=1"    scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery对表单的操作及更多应用</title>
      <link href="/2023/01/16/first/"/>
      <url>/2023/01/16/first/</url>
      
        <content type="html"><![CDATA[<h1 id="这是第一篇文章"><a href="#这是第一篇文章" class="headerlink" title="这是第一篇文章"></a>这是第一篇文章</h1><div id="aplayer-oSEOhviA" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="4895239160" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="false" data-listmaxheight="340px" data-preload="auto" data-theme="#e3f2f5" data-volume="0.4" mutex="true"></div>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
            <tag> 表格 </tag>
            
            <tag> 表单验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pinia</title>
      <link href="/2023/01/04/pinia/"/>
      <url>/2023/01/04/pinia/</url>
      
        <content type="html"><![CDATA[<h1 id="pinia"><a href="#pinia" class="headerlink" title="pinia"></a>pinia</h1><blockquote><p><a href="https://pinia.web3doc.top/">Pinia 中文文档</a></p><p><a href="https://www.bilibili.com/video/BV11Y411b7nb/">b 站教程</a></p></blockquote><h2 id="1-什么是-pinia"><a href="#1-什么是-pinia" class="headerlink" title="1.什么是 pinia"></a>1.什么是 pinia</h2><ul><li>最新的 Vue 状态管理库，用于替代 Vuex</li><li>特点:<ul><li>使用更加简便</li><li>更好的支持 Ts</li></ul></li></ul><h2 id="2-pinia-的安装"><a href="#2-pinia-的安装" class="headerlink" title="2.pinia 的安装"></a>2.pinia 的安装</h2><ul><li>使用包管理工具来安装 pinia</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add pinia</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">or</span></span><br><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><h2 id="3-pinia-的基本使用"><a href="#3-pinia-的基本使用" class="headerlink" title="3.pinia 的基本使用"></a>3.pinia 的基本使用</h2><h3 id="3-1-创建-pinia-实例"><a href="#3-1-创建-pinia-实例" class="headerlink" title="3.1 创建 pinia 实例"></a>3.1 创建 pinia 实例</h3><ul><li>在<code>main.js</code>中引用 pinia 然后注册</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建vue实例</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建pinia实例</span></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//挂载pinia实例</span></span><br><span class="line">app.<span class="title function_">use</span>(pinia);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将vue实例挂载到页面上</span></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>Vue2 使用 pinia</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果是vue2使用pinia插件还需多安装一个插件</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia, <span class="title class_">PiniaVuePlugin</span> &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">PiniaVuePlugin</span>);</span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">  <span class="comment">// 其他选项...</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// 注意同一个pinia实例可以在多个Vue应用中使用</span></span><br><span class="line">  pinia,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="3-2-创建-store-文件夹"><a href="#3-2-创建-store-文件夹" class="headerlink" title="3.2 创建 store 文件夹"></a>3.2 创建 store 文件夹</h3><ul><li>在<code>src</code>文件夹下创建一个 store 文件夹用来存储 pinia 相关文件</li><li>在<code>store</code>文件夹下创建一个<code>index.js</code>用来充当 pinia 的容器</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入defineStoreAPI用来创建容器</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个容器然后暴露</span></span><br><span class="line"><span class="keyword">export</span> deault <span class="title function_">defineStore</span>(<span class="string">&#x27;main&#x27;</span>,&#123;</span><br><span class="line">    <span class="comment">//类似于data用来保存全局的数据</span></span><br><span class="line">    <span class="attr">state</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">num</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="string">&quot;25&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//类似于computed(计算属性),用来封装计算属性，有缓存的功能</span></span><br><span class="line">    <span class="attr">getters</span>:&#123;</span><br><span class="line">         <span class="title function_">maxNum</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">num</span> * <span class="number">10</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//类似于methods,用来存储对数据的操作方法,封装业务逻辑，用来修改state</span></span><br><span class="line">    <span class="attr">actions</span>:&#123;</span><br><span class="line">        <span class="title function_">dataChange</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//this.num++;</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&quot;牛马&quot;</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">age</span>++;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">num</span>++;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1122</span>);</span><br><span class="line">      &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-3-在组件使用-pinia"><a href="#3-3-在组件使用-pinia" class="headerlink" title="3.3 在组件使用 pinia"></a>3.3 在组件使用 pinia</h3><ul><li>如果想要使用 pinia 需要在组件中引入 store 并且要在 setup 中声明调用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入创建好的容器</span></span><br><span class="line"><span class="keyword">import</span> myStore <span class="keyword">from</span> <span class="string">&quot;../store/index&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用函数创建store实例,然后就可以通过实例对象访问到store中的属性和方法</span></span><br><span class="line"><span class="keyword">const</span> mainStore = <span class="title function_">myStore</span>();</span><br></pre></td></tr></table></figure><ul><li>模板中使用 pinia 的数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>piniaDemo中的数据&#123;&#123; mainStore.num &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>名字:&#123;&#123; mainStore.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄:&#123;&#123; mainStore.age &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>piniaDemo中更大的数据:&#123;&#123; mainStore.maxNum &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleAge&quot;</span>&gt;</span>点击年龄添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>通过结构赋值来获取 store 中的属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123; name, num, age, maxNum &#125; = mainStore;</span><br><span class="line"><span class="comment">//但这样通过结构赋值得到的数据不是响应式的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//为了解决以上问题，可以借助pinia内置的API来解决</span></span><br><span class="line"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过这样获得的数据就是响应式的数据</span></span><br><span class="line"><span class="keyword">let</span> &#123; name, age, num, maxNum &#125; = <span class="title function_">storeToRefs</span>(mainStore);</span><br></pre></td></tr></table></figure><ul><li>getters 的使用和配置</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//getters类似于组件中的computed计算属性</span></span><br><span class="line"><span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="comment">//写成函数的形式，且会收到state作为参数，通过如state.age这种形式可以访问到state中的数据</span></span><br><span class="line">    <span class="title function_">maxNum</span>(<span class="params">state</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">num</span> * <span class="number">10</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>actions 的配置和使用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在store文件夹下的index.js</span></span><br><span class="line"><span class="attr">actions</span>:&#123;</span><br><span class="line">    <span class="title function_">dataChange</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&quot;牛马&quot;</span>;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">age</span>++;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">num</span>++;</span><br><span class="line">      &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在组件中</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleAge</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//以这种形式调用即可</span></span><br><span class="line">   mainStore.<span class="title function_">dataChange</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改 state 中的数据<ul><li>方法一:当修改单个属性数据时，直接修改即可</li><li>方法二:当需要批量修改数据时的<code>$patch()</code>的对象形式来修改</li><li>方法三:当需要批量修改数据时的<code>$patch()</code>的函数形式来修改</li><li>方法四：调用 actions 中的方法来修改(推荐使用这种)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">handleAge</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 方式一:直接修改数据</span></span><br><span class="line">  <span class="comment">//mainStore.age++;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 方式二:通过$patch()来修改多个数据</span></span><br><span class="line">  <span class="comment">// mainStore.$patch(&#123;</span></span><br><span class="line">  <span class="comment">//     name: &#x27;牛马&#x27;,</span></span><br><span class="line">  <span class="comment">//     num: mainStore.num + 1</span></span><br><span class="line">  <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 方式三:通过$patch的一个函数来修改</span></span><br><span class="line">  <span class="comment">// mainStore.$patch(state =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//     mainStore.name = &#x27;牛马&#x27; + 1;</span></span><br><span class="line">  <span class="comment">//     mainStore.num++;</span></span><br><span class="line">  <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 方式四:通过action来修改</span></span><br><span class="line">  mainStore.<span class="title function_">dataChange</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-基于-pinia-的简单案例"><a href="#4-基于-pinia-的简单案例" class="headerlink" title="4.基于 pinia 的简单案例"></a>4.基于 pinia 的简单案例</h2><h3 id="4-1-案例准备"><a href="#4-1-案例准备" class="headerlink" title="4.1 案例准备"></a>4.1 案例准备</h3><h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><ul><li><p>商品列表</p><ul><li>展示商品列表</li><li>添加到购物车</li></ul></li><li><p>购物车</p><ul><li>展示购物车商品列表</li><li>展示总价格</li><li>订单结算</li><li>展示结算状态</li></ul></li></ul><h3 id="页面模板"><a href="#页面模板" class="headerlink" title="页面模板"></a>页面模板</h3><ul><li>App.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1&gt;Pinia - 购物车展示&lt;/h1&gt;</span><br><span class="line">  &lt;hr /&gt;</span><br><span class="line">  &lt;h2&gt;商品列表&lt;/h2&gt;</span><br><span class="line">  &lt;ProductList&gt;&lt;/ProductList&gt;</span><br><span class="line">  &lt;hr /&gt;</span><br><span class="line">  &lt;ShoppingCart&gt;&lt;/ShoppingCart&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import ProductList from &quot;./components/ProductList.vue&quot;;</span><br><span class="line">import ShoppingCart from &quot;./components/ShoppingCart.vue&quot;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>ProductList.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">      商品名称 - 商品价格</span><br><span class="line">      &lt;button&gt;添加到购物车&lt;/button&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">      商品名称 - 商品价格</span><br><span class="line">      &lt;button&gt;添加到购物车&lt;/button&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">      商品名称 - 商品价格</span><br><span class="line">      &lt;button&gt;添加到购物车&lt;/button&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Less</title>
      <link href="/2022/10/07/Less/"/>
      <url>/2022/10/07/Less/</url>
      
        <content type="html"><![CDATA[<h1 id="less-初见"><a href="#less-初见" class="headerlink" title="less 初见"></a>less 初见</h1><h2 id="less-的概念"><a href="#less-的概念" class="headerlink" title="less 的概念"></a>less 的概念</h2><p>less 是一种动态样式语言，属于 css 预处理器的范畴，它扩展了 css 语言，增添了变量、Mixin、函数等特性<br>使得 css 更加容易维护和拓展，less 即可以在客户端中运行，也可以借助 node.js 环境在服务器中运行.</p><p>:::tip 注意<br>less 可以借助工具将其转化为 css,推荐使用 vscode 中的 Easy-less 插件。<br>:::</p><p>(less 中文官网)[<a href="https://lesscss.com.cn/]">https://lesscss.com.cn/]</a></p><h1 id="less-中的混合"><a href="#less-中的混合" class="headerlink" title="less 中的混合"></a>less 中的混合</h1><h2 id="混合的概念"><a href="#混合的概念" class="headerlink" title="混合的概念"></a>混合的概念</h2><p>混合就是将一系列属性从一个规则集导入到另一个规则集的方式。</p><ul><li>普通混合（缺点：会被编译到 css 文件中）</li><li>不带输出的混合</li><li>带参数的混合（类似于函数）</li></ul><h2 id="带参数并且有默认值的混合（类似于给函数形参设置默认值）"><a href="#带参数并且有默认值的混合（类似于给函数形参设置默认值）" class="headerlink" title="带参数并且有默认值的混合（类似于给函数形参设置默认值）"></a>带参数并且有默认值的混合（类似于给函数形参设置默认值）</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hunhe</span>(<span class="variable">@color</span>:black,<span class="variable">@width</span>: <span class="number">600px</span><span class="comment">/*默认参数*/</span>) &#123;</span><br><span class="line">  <span class="comment">//带参数的混合</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@width</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带多个参数的混合"><a href="#带多个参数的混合" class="headerlink" title="带多个参数的混合"></a>带多个参数的混合</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hunhe</span>(<span class="variable">@color</span>:black,<span class="variable">@width</span>: <span class="number">600px</span>) &#123;</span><br><span class="line">  <span class="comment">//带参数的混合</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@width</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="命名参数-即给指定实参传参"><a href="#命名参数-即给指定实参传参" class="headerlink" title="命名参数(即给指定实参传参)"></a>命名参数(即给指定实参传参)</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hunhe</span>(<span class="variable">@color</span>:black,<span class="variable">@width</span>: <span class="number">600px</span>) &#123;</span><br><span class="line">  <span class="comment">//带参数的混合</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@width</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrap3</span> &#123;</span><br><span class="line">  <span class="selector-class">.hunhe</span>(<span class="variable">@width</span>: <span class="number">400px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="匹配模式（在多个相同的混合中-参数个数必须相同-，匹配特定的混合。）"><a href="#匹配模式（在多个相同的混合中-参数个数必须相同-，匹配特定的混合。）" class="headerlink" title="匹配模式（在多个相同的混合中(参数个数必须相同)，匹配特定的混合。）"></a>匹配模式（在多个相同的混合中(参数个数必须相同)，匹配特定的混合。）</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span>(dark, <span class="variable">@color</span>) &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">darken</span>(<span class="variable">@color</span>, <span class="number">10%</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mixin</span>(light, <span class="variable">@color</span>) &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">lighten</span>(<span class="variable">@color</span>, <span class="number">10%</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// @_ 表示匹配所有</span></span><br><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@_</span>, <span class="variable">@color</span>) &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">@switch:</span> light;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="variable">@switch</span>, <span class="number">#888</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arguments-变量（是个数组用来保存实参）"><a href="#arguments-变量（是个数组用来保存实参）" class="headerlink" title="arguments 变量（是个数组用来保存实参）"></a>arguments 变量（是个数组用来保存实参）</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*arguments变量*/</span></span><br><span class="line"><span class="selector-class">.borders</span>(<span class="variable">@w</span>,<span class="variable">@c</span>,<span class="variable">@y</span>) &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="variable">@arguments</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bor1</span> &#123;</span><br><span class="line">  <span class="selector-class">.borders</span>(<span class="number">2px</span>,solid,red);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>:::danger 注意<br>注意由于 Eass-less 插件只有当文件再次保存时才会再次进行编译<br>所以当 demo.less 文件中的内容被修改而 test.less 文件未进行再次保存，则 test.css 的内容无法进行更新。<br>:::</p><h1 id="less-基础"><a href="#less-基础" class="headerlink" title="less 基础"></a>less 基础</h1><h2 id="less-中的注释"><a href="#less-中的注释" class="headerlink" title="less 中的注释"></a>less 中的注释</h2><p>less 中有两种注释格式</p><ul><li>单行注释:以&#x2F;&#x2F;为开头的注释，不会被编译到 css 文件中。</li><li>多行注释:以&#x2F;*为符号的注释方式，会被编译到 css 文件中</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这是一个不会被编译到css文件中的单行注释。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*这是一个会被编译到css文件中的多行注释*/</span></span><br></pre></td></tr></table></figure><h2 id="less-中的变量"><a href="#less-中的变量" class="headerlink" title="less 中的变量"></a>less 中的变量</h2><p>运用方式:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@color:</span> pink; <span class="comment">//属性值作为变量。</span></span><br><span class="line"><span class="variable">@m:</span> margin; <span class="comment">//属性名作为变量。</span></span><br><span class="line"><span class="variable">@selector:</span> #wrap; <span class="comment">//选择器作为变量。</span></span><br><span class="line"></span><br><span class="line"><span class="variable">@&#123;selector&#125;</span>&#123;</span><br><span class="line">    @&#123;m&#125;:<span class="number">0</span> <span class="selector-tag">auto</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">实际编译效果:</span><br><span class="line"><span class="selector-id">#wrap</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>:::tip 注意</p><ul><li>当 less 中的变量保存的是属性值或是选择器时，调用变量时的格式应为:@{变量名}</li><li>作为 URL:@{url}</li><li>变量具有延迟加载即:将作用域中代码解析完后再来调用变量赋值。<br>:::</li></ul><h2 id="less-中的嵌套规则"><a href="#less-中的嵌套规则" class="headerlink" title="less 中的嵌套规则"></a>less 中的嵌套规则</h2><ul><li>less 中的嵌套结构与 HTML 中盒子模型的嵌套结构相对应,如下所示。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="variable">@&#123;selector&#125;</span>&#123;</span><br><span class="line">    @&#123;m&#125;:<span class="number">0</span> <span class="selector-tag">auto</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="variable">@color</span>;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">1.5s</span>;</span><br><span class="line">    <span class="selector-class">.wrap2</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: yellow;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>&amp;符号在嵌套中的使用<br>在选择器前加&amp;表示与父级选择则器同一等级。</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrap2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">编译后的效果为:</span><br><span class="line"><span class="selector-class">.wrap</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="less-的计算"><a href="#less-的计算" class="headerlink" title="less 的计算"></a>less 的计算</h1><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>计算结果的单位以最左侧数据的单位为准</li><li>注意，计算除法时要添加括号，如果不加则无法生效</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrap3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100</span>+<span class="number">100</span>+<span class="number">200px</span>; <span class="comment">//加法</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>-<span class="number">200</span>-<span class="number">50rem</span>; <span class="comment">//减法</span></span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">50</span> * <span class="number">2</span> * <span class="number">3px</span>; <span class="comment">//乘法</span></span><br><span class="line">  <span class="attribute">margin-right</span>: (<span class="number">300</span>/<span class="number">2</span>) px; <span class="comment">//除法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrap3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">150</span> px; //如果less不加括号则该处无法生效</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="继承（Extend）"><a href="#继承（Extend）" class="headerlink" title="继承（Extend）"></a>继承（Extend）</h1><h2 id="继承的优点"><a href="#继承的优点" class="headerlink" title="继承的优点"></a>继承的优点</h2><ul><li>less 中继承可以多个选择器应用同一组属性，最终编译为并集选择器。</li><li>其性能比混合高，但灵活性比混合低。</li></ul><h2 id="两种继承"><a href="#两种继承" class="headerlink" title="两种继承"></a>两种继承</h2><h3 id="Extend-Syntax（不加-all）"><a href="#Extend-Syntax（不加-all）" class="headerlink" title="Extend Syntax（不加 all）"></a>Extend Syntax（不加 all）</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.extend2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">1.5s</span>;</span><br><span class="line">  <span class="selector-class">.wrap2</span> &#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span>:<span class="selector-tag">extend</span>(.extend2); <span class="comment">//继承extend2中的属性</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.extend2</span>,</span><br><span class="line"><span class="selector-class">.wrap</span> <span class="selector-class">.wrap2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Extend-“all”"><a href="#Extend-“all”" class="headerlink" title="Extend “all”"></a>Extend “all”</h3><p>如果在继承加上 all 则表示在继承时，与继承的选择器相关的所有属性都将被继承。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.extend2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.extend2</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">1.5s</span>;</span><br><span class="line">  <span class="selector-class">.wrap2</span> &#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span>:<span class="selector-tag">extend</span>(.extend2 all); <span class="comment">//加上了all，extend2的hover属性才会被继承</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.extend2</span>,</span><br><span class="line"><span class="selector-class">.wrap</span> <span class="selector-class">.wrap2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.extend2</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.wrap</span> <span class="selector-class">.wrap2</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>可理解为把 all 前的选择器出现的地方全都替换为 extend 前的选择器</li><li>即把 .test 替换为 .replacement 生成一个新的选择器应用样式，且不破坏原有的选择器</li></ul></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.a</span><span class="selector-class">.b</span><span class="selector-class">.test</span>,</span><br><span class="line"><span class="selector-class">.test</span><span class="selector-class">.c</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.test</span> &#123;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.replacement</span>:<span class="selector-tag">extend</span>(.test all) &#123;</span><br><span class="line">  <span class="comment">//继承的另一种写法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.a</span><span class="selector-class">.b</span><span class="selector-class">.test</span>,</span><br><span class="line"><span class="selector-class">.test</span><span class="selector-class">.c</span>,</span><br><span class="line"><span class="selector-class">.a</span><span class="selector-class">.b</span><span class="selector-class">.replacement</span>,</span><br><span class="line"><span class="selector-class">.replacement</span><span class="selector-class">.c</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.test</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.replacement</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="避免编译"><a href="#避免编译" class="headerlink" title="避免编译"></a>避免编译</h2><ul><li>通过给内容添加单引号或双引号来避免内容被 less 编译而是直接输出到 css 文件中</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.extend2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="string">&quot;400px+200px&quot;</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="built_in">calc</span>(<span class="number">100px</span>+<span class="number">50rem</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.extend2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="string">&quot;400px+200px&quot;</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="built_in">calc</span>(<span class="number">100px</span>+<span class="number">50rem</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> less </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Es6</title>
      <link href="/2022/10/03/Es6%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
      <url>/2022/10/03/Es6%E6%A8%A1%E5%9D%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="Es6-模块化"><a href="#Es6-模块化" class="headerlink" title="Es6 模块化"></a>Es6 模块化</h1><h2 id="什么是模块"><a href="#什么是模块" class="headerlink" title="什么是模块"></a>什么是模块</h2><ul><li>将实现某一功能的 js 代码抽离出来构成一个单独的 js 文件,当需要这一功能时，再将该 js 文件引入，该 js 文件能被称为一个模块。</li><li>一个模块就是一个独立的文件</li></ul><h2 id="模块化的优势"><a href="#模块化的优势" class="headerlink" title="模块化的优势"></a>模块化的优势</h2><ul><li>防止命名冲突</li><li>实现代码的复用</li><li>提高代码的可维护性</li><li>每个模块只会加载一次，若再去加载同目录下同文件，直接从内存中读取。</li></ul><h2 id="模块化语法"><a href="#模块化语法" class="headerlink" title="模块化语法"></a>模块化语法</h2><p>即如何将模块暴露出去供人使用(export),如何引入已经写好的模块来使用(import)</p><h3 id="暴露方式-export"><a href="#暴露方式-export" class="headerlink" title="暴露方式(export)"></a>暴露方式(export)</h3><ul><li>分别暴露:即在模块中，将所有的变量和函数都去调用 export 命令将它们一一暴露</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">hanshu</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;分别暴露&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>统一暴露:在模块中将所有的变量或函数整合成一个对象，最后将这个对象暴露出去。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> msg = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">25</span>,</span><br><span class="line">  <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">printf</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(msg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; msg, printf &#125;;</span><br></pre></td></tr></table></figure><ul><li>默认暴露:暴露一个对象，将想要暴露的内容直接写在对象中</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">print</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">xinxi</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    <span class="attr">sex</span>: <span class="string">&quot;未知&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="引入方式-import"><a href="#引入方式-import" class="headerlink" title="引入方式(import)"></a>引入方式(import)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//注意type的类型为module</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//分别暴露</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; hanshu &#125; <span class="keyword">from</span> <span class="string">&quot;./module/分别暴露.js&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">hanshu</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//统一暴露</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; printf, msg &#125; <span class="keyword">from</span> <span class="string">&quot;./module/统一暴露.js&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">printf</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(msg);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//默认暴露</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> zs <span class="keyword">from</span> <span class="string">&quot;./module/默认暴露.js&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  zs.<span class="title function_">print</span>(zs.<span class="property">xinxi</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="as-的用法"><a href="#as-的用法" class="headerlink" title="as 的用法"></a>as 的用法</h3><ul><li><p>在 Es6 模块化中，as 用于引入或暴露模块时，对模块中的变量或方法等进行重命名，从而实现将模块中的变量隐藏起来防止被修改</p></li><li><p>暴露时使用 as 重命名</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> msg = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">25</span>,</span><br><span class="line">  <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">printf</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(msg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; msg, printf <span class="keyword">as</span> conlog &#125;; <span class="comment">//暴露时将printf函数重命名为conlog</span></span><br></pre></td></tr></table></figure><ul><li>引入时使用 as 重命名</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将引入的msg变量用as重命名为nsg</span></span><br><span class="line"><span class="keyword">import</span> &#123; msg <span class="keyword">as</span> nsg &#125; <span class="keyword">from</span> <span class="string">&quot;./module/统一暴露.js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将所有模块中暴露的内容整合成一个对象并用as对其进行重命名</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> ty <span class="keyword">from</span> <span class="string">&quot;模块地址&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="import-命令特点"><a href="#import-命令特点" class="headerlink" title="import 命令特点"></a>import 命令特点</h3><ul><li>import 命令会提升到整个模块的头部，首先执行。</li><li>多次重复执行同一句 import 语句，那么只会执行第一次,执行完第一次后会将其暂存起来，下次在执行同样的 import 命令,会去读取内存而不是再次引入。</li></ul><h3 id="export-default-的特点"><a href="#export-default-的特点" class="headerlink" title="export default 的特点"></a>export default 的特点</h3><ul><li><p>在一个文件或模块中，export default 命令只能使用一次。(多个默认值显然不合理)</p></li><li><p>引入其它暴露方式的模块时，需要在引入时将想要引入的变量用{}括起来(Es6 解构赋值),而 export default 不需要。</p></li><li><p>使用 export default 暴露的内容在引入时，可以使用任意的变量来接收</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zs <span class="keyword">from</span> <span class="string">&quot;./module/默认暴露.js&quot;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Es6 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
